#! /bin/bash

# Simple script testing SSH connectivity and credentials to devices given in file, 
# one device per line.
# Credentials given -u and -p parametrs !!NOT SECURE.
# If credentials are not given script will ask.
# 
# Author: Jiri Kindl
# Version: 20200408

usage()
{
  cat << EOF
  Usage: $0 -h hostfile [-u username] [-p password] [-c command] 

  -h hostfile
           file with the list of host to test (one per line)

  -u username           
           if username is not provided script will prompt you

  -p password           
           if password is not provided script will prompt you, It's more SECURE to not provide password as parametr

  -c command
           by default hostname
EOF
}

hosttest()
{
  #Using sed to remove windows eol and trim the Text (remove leading and trailing spaces)
  for TEST_HOST in $(sed -e 's/\r//' $HFILE | sed 's/^[ \t]*//' |sed 's/[ \t]*$//')
  do
    #echo -n "$TEST_HOST,"
    res=$(sshpass -p $PASSWORD ssh -l $USERNAME -oStrictHostKeyChecking=no $TEST_HOST $COMMAND 2>&1)
	echo "$TEST_HOST,$res"
  done
}
#main

HFILE=
USERNAME=
PASSWORD=
COMMAND="hostname"

while getopts "h:p:u:c:" OPTION
do
  case $OPTION in
   p)
     PASSWORD=$OPTARG
     ;;
  h)
    HFILE=$OPTARG
    ;;
  u)
    USERNAME=$OPTARG
    ;;
  c)
    COMMAND=$OPTARG
    ;;
  esac
done

#check hostname file existence
if [ -z $HFILE ]
then
  echo "ERROR: no hostfile entered"
  usage
  exit 1
fi
if [ ! -e $HFILE ]
then
  echo "ERROR: $HFILE not exist"
  usage
  exit 1
fi

if [ -z $USERNAME ]
then
  printf "Username: "
  read USERNAME
fi

if [ -z $PASSWORD ]
then
  stty -echo
  printf "Password: "
  read PASSWORD
  stty echo
  printf "\n"
fi


echo "Host,Results of $COMMAND"
hosttest
exit 0
